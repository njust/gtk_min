name: Linux Build

on:
  push:
    branches: [ master ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install build prerequsites
        run: sudo apt-get update && sudo apt-get install -y python3-pip libxkbcommon-dev libcairo2-dev libwayland-dev libxrandr-dev libxi-dev libxcursor-dev libxdamage-dev libxinerama-dev libgstreamer1.0-dev libgstreamer-plugins-bad1.0-dev ninja-build
      - name: Install python modules
        run: sudo python3 -m pip install meson==0.59.1

      - name: Clone gtk sourceview repo
        run: git clone https://gitlab.gnome.org/GNOME/gtksourceview.git
      - name: Cache gtk sourceview build
        uses: actions/cache@v2
        id: gtk-sourceview-build-cache
        with:
          path: |
            /tmp/gtkSourceviewBuild
            /opt/gtkSourceView
          key: ${{ runner.os }}-${{ hashFiles('gtksourceview/.git/HEAD') }}
      - name: Create sourceview build dir
        if: steps.gtk-sourceview-build-cache.outputs.cache-hit != 'true'
        run: mkdir -p gtkSourceviewBuild
        working-directory: /tmp
      - name: Configure sourceview
        if: steps.gtk-sourceview-build-cache.outputs.cache-hit != 'true'
        run: meson --prefix=/opt/gtkSourceView /tmp/gtkSourceviewBuild
        env:
          PKG_CONFIG_PATH: /opt/gtk/lib/x86_64-linux-gnu/pkgconfig
        working-directory: gtksourceview
      - name: Build gtk sourceview
        if: steps.gtk-sourceview-build-cache.outputs.cache-hit != 'true'
        run: ninja && ninja install
        working-directory: /tmp/gtkSourceviewBuild
        env:
          PKG_CONFIG_PATH: /opt/pango/lib/x86_64-linux-gnu/pkgconfig:/opt/gtk/lib/x86_64-linux-gnu/pkgconfig

      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Cargo build
        run: cargo build --release
        env:
          PKG_CONFIG_PATH: /opt/gtkSourceView/lib/x86_64-linux-gnu/pkgconfig
          LD_LIBRARY_PATH: /opt/gtk/lib/x86_64-linux-gnu
      - name: Install AppImageTool
        run: wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage && sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool && chmod +x /usr/local/bin/appimagetool
      - name: Create AppImage
        run: ./createAppImage.sh
      - uses: actions/upload-artifact@v2
        with:
          name: gtk_min-x86_64.AppImage
          path: gtk_min-x86_64.AppImage
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: gtk_min-x86_64.AppImage